app: blackledger
ts: 20230718035300931
name: ulid
depends:
- sqly:20211105034808482_init
doc: >-
  A ULID is a 128-bit (16-byte) integer that consist of:

  * timestamp: 48 bits (6 bytes)
  * randomness: 80 bits (10 bytes)

  ULIDs are stored in PostgreSQL as UUIDs, which are also 128-bit integers.

  ULIDs are encoded for presentation as 26-byte strings using Crockford's Base32, but
  this migration does not include any encoding or decoding logic -- for the purpose of
  the database, they are UUIDs that sort in approximate time order (the first 48 bits).

  The ULID spec and links to implementations: <https://github.com/ulid/spec>

up:
- |-
  CREATE OR REPLACE FUNCTION gen_id(varchar) RETURNS uuid AS $$
    -- $1 = sequence name
    SELECT (
      -- timestamp to ms resolution: 6 bytes (= 12 hex)
      lpad(to_hex((extract(epoch from current_timestamp) * 1000)::bigint), 12, '0')
      -- seq ($1) is smallint sequence (2 bytes = 4 hex)
      || lpad(to_hex(nextval($1)), 4, '0')
      -- 8 bytes (16 hex) of randomness
      || lpad(to_hex((random()*2147483647)::int), 8, '0')
      || lpad(to_hex((random()*2147483647)::int), 8, '0')
    )::uuid;
  $$ LANGUAGE SQL;

dn:
- DROP FUNCTION gen_id(varchar);
